{"version":3,"sources":["AddStudentModal.tsx","Dashboard.tsx","reportWebVitals.ts","index.tsx"],"names":["AddStudentModal","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","handleSubmit","event","preventDefault","data","FormData","target","student","firstName","get","lastName","age","teacher","axios","post","window","location","reload","_createClass","key","value","_jsxs","Modal","isOpen","this","props","toggle","children","_jsx","ModalHeader","ModalBody","action","onSubmit","Row","Col","htmlFor","type","id","name","Button","color","Component","Dashboard","state","students","setState","prevState","_this2","then","res","Navbar","border","light","NavbarBrand","className","IoSchoolOutline","Container","sm","Card","body","CardTitle","tag","IoMan","CardText","IoSettings","onClick","map","s","CardBody","CardFooter","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd2368f1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Button, Col, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\r\n\r\ntype MyProps = {\r\n    isOpen: boolean\r\n    toggle\r\n}\r\n\r\nexport class AddStudentModal extends Component<MyProps>{\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n\r\n        const student = {\r\n            firstName: data.get(\"firstName\"),\r\n            lastName: data.get(\"lastName\"),\r\n            age: data.get(\"age\"),\r\n            teacher : data.get(\"teacher\")\r\n        }\r\n\r\n        axios.post(\"http://localhost:7070/create\", student)\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen = {this.props.isOpen} toggle={this.props.toggle}>\r\n                <ModalHeader toggle={this.props.toggle}>\r\n                    Adding new wise student\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form action=\"\" onSubmit={this.handleSubmit}>\r\n                    <Row>\r\n                        <Col>\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <input type=\"text\" id=\"firstName\" name=\"firstName\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label htmlFor=\"age\">Age</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <input type=\"number\" id=\"age\" name=\"age\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label htmlFor=\"teacher\">Teacher</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <input type=\"text\" id=\"teacher\" name=\"teacher\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        Add new student\r\n                    </Button>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Card, CardBody, CardFooter, CardText, CardTitle, Col, Container, Navbar, NavbarBrand, Row } from \"reactstrap\";\r\nimport {\r\n    IoSchoolOutline,\r\n    IoMan,\r\n    IoSettings,\r\n} from \"react-icons/io5\"\r\nimport Button from \"@restart/ui/esm/Button\";\r\nimport axios from \"axios\";\r\nimport { AddStudentModal } from \"./AddStudentModal\";\r\n\r\ninterface MyState{\r\n    students: [];\r\n    isOpen: boolean;\r\n}\r\n\r\nexport class Dashboard extends Component<{}, MyState>{\r\n\r\n    state : MyState = {\r\n        students: [],\r\n        isOpen: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:7070/list\")\r\n            .then(res => {\r\n                const students = res.data\r\n                this.setState({students})\r\n            });\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState((prevState) => ({isOpen : !prevState.isOpen}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color='white' border='solid black 2px' light mb-2>\r\n                    <NavbarBrand className=\"text-dark\">\r\n                        <IoSchoolOutline className=\"font-size-xxl\"/>\r\n                        <span className=\"font-size-l ml-3\">\r\n                            School Management Application\r\n                        </span>\r\n                    </NavbarBrand>\r\n                </Navbar>\r\n                <Container className=\"mt-3\">\r\n                    <Row>\r\n                        <Col sm='4'>\r\n                            <Card body>\r\n                                <CardTitle tag=\"h5\">\r\n                                    <IoMan className=\"font-size-xl\"/>  Student\r\n                                </CardTitle>\r\n                                <CardText>\r\n                                  Student module: check results, schedule, upcoming exams,student profile.\r\n                                </CardText>\r\n                                <Button className=\"btn btn-secondary\">Manage Students</Button>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm='4'>\r\n                            <Card body>\r\n                                <CardTitle tag=\"h5\">\r\n                                    <IoSchoolOutline className=\"font-size-xl\"/>  Teacher\r\n                                </CardTitle>\r\n                                <CardText>\r\n                                   Teacher module : Store student results, create assignments, update assignments.\r\n                                </CardText>\r\n                                <Button className=\"btn btn-secondary\">Manage Teachers</Button>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm='4'>\r\n                            <Card body>\r\n                                <CardTitle tag=\"h5\">\r\n                                    <IoSettings className=\"font-size-xl\"/>Parents\r\n                                </CardTitle>\r\n                                <CardText>\r\n                                   Parents module: Access student details,fees details,exam details,student performance.\r\n                                </CardText>\r\n                                <Button className=\"btn btn-secondary\">Manage Parents</Button>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <AddStudentModal isOpen={this.state.isOpen} toggle={ this.toggle }/>\r\n\r\n                <Container className=\"mt-4\">\r\n                    <Row>\r\n                        <Col sm='12'className=\"text-center\">\r\n                            <Button className=\"btn btn-success block\" onClick={this.toggle}>\r\n                                <span className=\"font-size-l\">Add New Student</span> \r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container className=\"mt-4\">\r\n                    {this.state.students.map(student => renderStudent(student))}\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction renderStudent(s: any){\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card body>\r\n                        <CardTitle tag=\"h5\">\r\n                            <IoMan className=\"font-size-xl\" /> {s.firstName+\" \"+s.lastName}\r\n                        </CardTitle>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col sm=\"4\" className=\"text-center\">\r\n                                    <span className=\"font-weight-bold\"><b>Class</b></span>\r\n                                    <span>{ \" \" }Second Year</span>\r\n                                </Col>\r\n                                <Col sm=\"4\" className=\"text-center\">\r\n                                    <span className=\"font-weight-bold\"><b>Age</b></span>\r\n                                    <span>{\" \"+s.age }</span>\r\n                                </Col>\r\n                                <Col sm=\"4\" className=\"text-center\">\r\n                                    <span className=\"font-weight-bold\"><b>Teacher</b></span>\r\n                                    <span>{\" \"+s.teacher} </span>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Row>\r\n                                <Col sm-6>\r\n                                    <Button className=\"btn btn-outline-primary block\">\r\n                                        Edit\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col sm-6>\r\n                                    <Button className=\"btn btn-outline-danger block\" onClick={()=>deleteStudent(s.id)} >\r\n                                        Delete\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n}\r\nfunction deleteStudent(id: String): void {\r\n    axios.post(`http://localhost:7070/delete/${id}`)\r\n    window.location.reload();\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport { Dashboard } from './Dashboard';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Dashboard />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}